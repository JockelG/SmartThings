/* **DISCLAIMER**
 * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * Without limitation of the foregoing, Contributors/Regents expressly does not warrant that:
 * 1. the software will meet your requirements or expectations;
 * 2. the software or the software content will be free of bugs, errors, viruses or other defects;
 * 3. any results, output, or data provided through or generated by the software will be accurate, up-to-date, complete or reliable;
 * 4. the software will be compatible with third party software;
 * 5. any errors in the software will be corrected.
 * The user assumes all responsibility for selecting the software and for the results obtained from the use of the software. The user shall bear the entire risk as to the quality and the performance of the software.
 */ 

def clientVersion() {
    return "1.0.0"
}

/**
 * Turn on Lights and Camera on DoorBell
 *
 * Author: SmartThings, updates by SkyJedi
 * Changes Copyright SkyJedi, redistribution of any changes or modified code is not allowed without permission
 */
definition(
    name: "Turn on Lights and Camera on DoorBell",
    namespace: "SkyJedi",
    author: "SkyJedi",
    description: "Turn on Lights and Camera on DoorBell",
    category: "Safety & Security",
    iconUrl: "https://s3.amazonaws.com/smartapp-icons/SafetyAndSecurity/App-IsItSafe.png",
    iconX2Url: "https://s3.amazonaws.com/smartapp-icons/SafetyAndSecurity/App-IsItSafe@2x.png"
)

preferences {
    page(name: "mainPage")
}
def mainPage() {
    dynamicPage(name: "mainPage", title: "Turn on Lights and Camera on DoorBell v${clientVersion()}", install: true, uninstall: true) {
        section("Doorbell Pushed") {
            input "mySwitch", "capability.switch", title: "Doorbell Pushed", required: false, multiple: true
		}
        section("Cameras and Lights settings and actions") {
            input "cameras", "capability.imageCapture", title: "Which Cameras(s) to take pictures", multiple: true, required: false
            input "lightson", "capability.switch", title: "Turn on these lights", multiple: true, required: false
        }
        section("Turn devices off after X minutes") {
        	input "timeOff", "number", title: "Minutes?", defaultValue: "5"
            }
        section("Notifications") {
            input "textMessage", "text", title: "Send this message (optional)", multiple: false, required: false
            input("recipients", "contact", title: "Send notifications to", multiple: true, required: false) {
                paragraph "You can enter multiple phone numbers to send an SMS to by separating them with a '+'. E.g. 5551234567+4447654321"
                input "sms", "phone", title: "To this phone", multiple: false, required: false
            }
        }
        section("Change Name of App (optional)") {
            label title: "Assign a name", required: false
        }
    }
}

def installed() {
	log.debug "INSTALLED with $settings"
	subscribeToEvents()
}

def updated() {
	log.debug "UPDATED with $settings"
	unschedule()
	unsubscribe()
	subscribeToEvents()
}

private subscribeToEvents()
{
	   subscribe(mySwitch, "switch.on", doorBell)
}

def doorBell(evt) {
	if (evt.value == "on") {
		log.debug "Doorbell Pushed startSequence(evt)"
		startSequence(evt)
		}
}
private startSequence(evt)
{
        sendText(sms, textMessage ? "$evt.displayName: $textMessage" : "Word")
        
        if (lightson) {
        	log.debug "Turning on lights $lightson"
        	lightson?.on()
            lightson?.setLevel(100) // If it is a dimmer set it to 100%
            lightson?.setHue(38.81278538812785) //Set Color to Green
            lightson?.setSaturation(85.88235294117648)
        }

        if (cameras) {
        	log.debug "Taking pictures with $cameras"
        	cameras?.take()
        }
		runIn(timeOff*60, turnOff)
	}
    
def turnOff()
{
	if (lightson) {
        	log.debug "Turning off lights $lightson"
        	lightson?.off()
			}
}

private sendText(number, message) {
	if (sms) {
    	def phones = sms.split("\\+")
        for (phone in phones) {
            sendSms(phone, message)
        	}
    	}
}
